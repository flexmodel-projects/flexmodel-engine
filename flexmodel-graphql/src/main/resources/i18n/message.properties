gql.query.comment=Query
gql.query.where.comment=Filter the rows returned
gql.query.order_by.comment=Sort the rows by one or more fields
gql.query.size.comment=Specify the max returned records per page (default to 30)
gql.query.page.comment=Specify the max returned records per page (default to 30)
gql.query.find_one.comment=Find Single row from “{0}.{1}”
gql.query.find.comment=Find multiple rows from “{0}.{1}”
gql.query.aggregate.comment=聚合查询“{0}.{1}”
gql.query.aggregate.selection.comment=Aggregated selection of \\\"{0}\\\"
gql.mutation.comment=Mutation
gql.mutation.create.comment=Create data to the table: {0}
gql.mutation.delete.comment=Delete data from the table: {0}
gql.mutation.delete_by_id.comment=Delete data from the table by id: {0}
gql.mutation.delete.filter.comment=Filter the rows which have to be deleted
gql.mutation.update_by_id.comment=Update data from the table by id: {0}
gql.bool_expr.comment=Boolean expression to filter rows from the table \\\"{0}\\\". All fields are combined with a logical 'AND'.
gql.order_by.comment=Ordering options when selecting data from \\\"{0}\\\".
gql.comparison_exp.comment=Boolean expression to compare fields of type \\\"{0}\\\". All fields are combined with logical 'AND.'
gql.enum.order_by.comment=Field ordering options
gql.enum.order_by.asc.comment=in ascending order, nulls last
gql.enum.order_by.desc.comment=in descending order, nulls first
gql.mutation.response.comment=Mutation response
gql.mutation.response.affected_rows.comment=data from the rows affected by the mutation
gql.directive.internal.comment=Applied to variables to declare variables, used together with _join and export
gql.directive.export.comment=Applied to scalar selections to assign fields to variables declared with @internal
gql.directive.transform.comment=Applied to selections of object/array types to flatten them
gql.type.model.comment=Model “{0}.{1}”
