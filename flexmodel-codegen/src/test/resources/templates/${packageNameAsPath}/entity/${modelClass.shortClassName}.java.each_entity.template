package ${modelClass.packageName};

<%
for( mImport in modelClass.imports) {
  out.println "import ${mImport};"
}
%>
/**
 * <% out << (modelClass.comment ? enumClass.comment : "") %>
 * Generated by Flexmodel Generator
 */
@ModelClass("${modelClass.originalModel.name}")
public class ${modelClass.shortClassName} {
<%for( field in modelClass.allFields) {
  out.println ""
  out << (field.comment ? m.comment + "\n" : "")
  out.println "  @ModelField(\"${field.fieldName}\")"
  if(field.relationField) {
    out.println "  @ModelRelation"
  }
  out.println "  private ${field.shortTypeName} ${field.variableName};"
}%>
<%for( field in modelClass.allFields) {
  out << """
  public ${field.shortTypeName} get${field.variableName.capitalize()}() {
    return ${field.variableName};
  }

  public void set${field.variableName.capitalize()}(${field.shortTypeName} ${field.variableName}) {
    this.${field.variableName} = ${field.variableName};
  }
  """
}%>
<%
if (modelClass.idField) {
  out << """
  @Override
  public String toString() {
    return this.getClass().getSimpleName() + \"<\" + get${modelClass.idField.variableName.capitalize()}() + \">\";
  }

  @Override
  public boolean equals(Object obj) {
    if (this.get${modelClass.idField.variableName.capitalize()}() != null && obj instanceof ${modelClass.shortClassName}) {
      return this.get${modelClass.idField.variableName.capitalize()}().equals(((${modelClass.shortClassName}) obj).get${modelClass.idField.variableName.capitalize()}());
    }
    return super.equals(obj);
  }
  """
}
%>
}
